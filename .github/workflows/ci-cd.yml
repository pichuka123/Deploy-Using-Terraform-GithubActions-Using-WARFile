name: Terraform CI CD Pipeline for Deploying AWS Resources
run-name: ${{ github.actor }} has triggered the pipeline

# Meaning of below lines:
# when should be the pipeline triggered?
# it should be triggered when there is any push to the branch of main
on:
  push:
    branches:
      - 'main'


# Defining the environment variables:
# even though we configured this in our git bash terminal, that is for our local laptop and AWS account
# here this configuration is for GitHub and AWS account 
# how to do this? Go to github account repository:repository settings:Secrets and variables under Security:Actions
# Click on New repository secret:Name as AWS_ACCESS_KEY:Secret is the value: Add secret
# Click on New repository secret:Name as AWS_SECRET_ACCESS_KEY:give the value:Add secret
# So they will be present in our repository secrets
# Now, how to make this pipeline aware of it is below:
#env:
#  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
#  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  

# Can be added if env is not working
# - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1

  

## Jobs part here:
jobs:
  build-infra:
    name: terraform-ci-cd
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Rename WAR
        run: mv target/myapp##*.war target/myapp.war

      - name: Upload WAR to S3
        run: |
          aws s3 cp target/myapp.war s3://pichukaartifactbucket/myapp.war

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./
      
      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ./
      
      - name: Terraform Plan
        id: plan
        run: terraform plan
        working-directory: ./
      
      - name: Terraform Apply
        id: apply
        run: terraform apply --auto-approve
        working-directory: ./




